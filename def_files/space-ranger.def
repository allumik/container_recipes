## >>> "space ranger runner" <<<
## space ranger binary defined as a apptainer image

Bootstrap: docker
From: debian:stable-slim

%labels
  Maintainer Alvin Meltsov

%help
  Image for running Space Ranger (https://support.10xgenomics.com/spatial-gene-expression/software/pipelines/latest/what-is-space-ranger) in a Singularity image. Building this image requires a Space Ranger installer package from https://support.10xgenomics.com/spatial-gene-expression/software/downloads/latest.

  Set variable `SR_INSTALLER` for to specify the location of the Space Ranger installer tarball. For this, define a variable `APPTAINERENV_SR_INSTALLER=/path/to/file.tar.gz` during `apptainer build`.

%setup
  ## check if SR_INSTALLER is set, exit if unset
  if [ -z ${APPTAINERENV_SR_INSTALLER+x} ]; then
    echo "Set Space Ranger installer path for variable 'SR_INSTALLER'.\nExample: APPTAINERENV_SR_INSTALLER=/path/file.tar.gz" >&2
    exit 1
  fi

  ## have to transfer files here, as the %files section does not intrepret variables
  cp "$APPTAINERENV_SR_INSTALLER" "$APPTAINER_ROOTFS/opt"
  ## NOTE: this does not work actually...
  APPTAINERENV_NOW="${date}"

%environment
  ## Locale settings
  export LANG='en_US.UTF-8'
  ## Alpine does not detect timezone
  export TZ='UTC'

%post
  ## Locale settings
  export LANG='en_US.UTF-8'
  ## Alpine does not detect timezone
  export TZ='UTC'
  SR_LOC="${SR_INSTALLER%.*.*}"

  ## add some buildtime environment variables to runtime
  echo "export PATH=\"/opt/$SR_LOC:$PATH\"" >> $APPTAINER_ENVIRONMENT
  echo "export NOW=\"$NOW\"" >> $APPTAINER_ENVIRONMENT

  ## install finally spaceranger :)
  tar -xzvf "/opt/$SR_INSTALLER" -C "/opt/"

%test
  ## show set environment variables
  echo "$PATH"
  echo "$NOW"
  ## test if installed binary is in the PATH
  if ! [ -x "$(command -v spaceranger)" ]; then
    echo "Executable `spaceranger` seems not to be in PATH..." >&2
    exit 1
  fi

%runscript
  echo "Container was created on $NOW"
  echo "Arguments received: $*"
  spaceranger $@